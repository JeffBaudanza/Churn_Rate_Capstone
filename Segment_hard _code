WITH months AS (
  SELECT 
    '2017-01-01' AS first_day, 
    '2017-01-31' AS last_day 
  UNION 
  SELECT 
    '2017-02-01' AS first_day, 
    '2017-02-28' AS last_day 
  UNION 
  SELECT 
    '2017-03-01' AS first_day, 
    '2017-03-31' AS last_day
),

cross_join AS (
  SELECT *
  FROM subscriptions 
  CROSS JOIN months
),
status AS
  (SELECT id, 
  first_day AS month, 
  CASE 
    WHEN (subscription_start < first_day) AND  (subscription_end > first_day OR subscription_end IS NULL) AND (segment = 87) THEN 1
    ELSE 0
  END AS is_active_87,

  CASE 
    WHEN (subscription_start < first_day) AND  (subscription_end > first_day OR subscription_end IS NULL) AND (segment = 30) THEN 1
    ELSE 0
  END AS is_active_30,

CASE
WHEN (subscription_end BETWEEN first_day and last_day)
AND (segment = 87)  THEN 1
  ELSE 0
END AS is_cancelled_87,
CASE
WHEN (subscription_end BETWEEN first_day and last_day)
AND (segment = 30)  THEN 1
  ELSE 0
END AS is_cancelled_30
FROM cross_join
  ),

status_aggregate AS 
( SELECT month,
sum(is_active_87) AS sum_active_87,
sum(is_active_30) AS sum_active_30,
sum(is_cancelled_87) AS sum_cancelled_87,
sum(is_cancelled_30) AS sum_cancelled_30
FROM status
GROUP BY month)

SELECT month, ROUND(1.0 * sum_cancelled_87 / sum_active_87,2) AS churn_rate_87,
ROUND(1.0 * sum_cancelled_30 / sum_active_30,2) AS churn_rate_30
FROM status_aggregate
;

